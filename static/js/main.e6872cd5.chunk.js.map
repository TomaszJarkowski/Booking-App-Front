{"version":3,"sources":["svg/undraw_Booking_re_gw4j.svg","svg/404.svg","context/UserContext.js","components/auth/AuthOptions.js","components/layout/Navbar.js","components/layout/Modal.js","components/layout/buttons/ButtonDanger.js","components/layout/dashboard/Accept.js","components/layout/dashboard/Books.js","components/layout/buttons/ButtonPrimary.js","components/layout/dashboard/ZeroBooks.js","components/layout/Spinner.js","components/layout/ErrorMessage.js","components/layout/buttons/ButtonDisabled.js","components/layout/dashboard/DeleteAccount.js","validation/validationChangeUsername.js","components/layout/dashboard/ChangeUsername.js","validation/validationChangePassword.js","components/layout/dashboard/ChangePassword.js","components/pages/Dashboard.js","context/BookContext.js","validation/validationBook.js","components/layout/calendary/Success.js","components/layout/calendary/HourForm.js","components/layout/calendary/Calendar.js","components/pages/Booking.js","components/pages/Home.js","components/pages/Error.js","validation/validationLogin.js","components/auth/Login.js","validation/validationRegister.js","components/auth/Register.js","Page.js","App.js","index.js"],"names":["module","exports","createContext","AuthOptions","useContext","UserContext","userData","setUserData","history","useHistory","className","user","onClick","push","userName","token","undefined","localStorage","setItem","Navbar","to","Modal","children","handleClose","e","stopPropagation","goBack","createPortal","document","querySelector","ButtonDanger","type","Accept","props","removeBook","actualDate","Date","getTime","Books","cloneArr","books","sort","a","b","dateDay","dateMonth","dateYear","hour","reverse","map","el","convertDate","style","toString","slice","borderBottom","key","Math","random","firstName","lastName","numberOfSeats","setElToRemove","ButtonPrimary","ZeroBooks","role","aria-label","Spinner","ErrorMessage","error","ButtonDisabled","disabled","DeleteAccount","useState","confirmation","setConfirmation","isError","setIsError","setError","loading","setLoading","submit","preventDefault","getItem","fetch","method","headers","then","response","json","window","location","reload","catch","message","validation","onSubmit","value","onKeyUp","onKeyDown","onChange","target","alphanumeric","validationChangeUsername","changeUsername","Error","match","length","ChangeUsername","setChangeUsername","body","JSON","stringify","id","name","validationChangePassword","oldPassword","newPassword","confirmNewPassword","ChangePassword","setOldPassword","setNewPassword","setConfirmNewPassword","Dashboard","setBooks","elToRemove","useEffect","downloadData","userId","bookRes","bookResJson","_id","res","data","filter","alert","render","path","email","validationBook","Success","HourForm","bookData","BookContext","setName","setLastName","setNumberOfSeats","setHour","success","setSuccess","htmlFor","dataNamesDays","shortCut","Calendar","availableDates","setAvailableDates","setBookData","arr","i","fortnightAway","now","year","month","day","NameDay","floor","Tiles","date","handleClick","Booking","BookingPage","Home","src","svg","alt","svg404","mailformat","validationLogin","password","Login","setEmail","setPassword","postLogin","login","loginResponse","validationRegister","passwordCheck","Register","setPasswordCheck","setUserName","postRegister","newUser","register","registerResponse","Page","exact","component","App","tokenRes","userJson","checkLoggedIn","Provider","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e6872cd5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_Booking_re_gw4j.16babcc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.59156c30.svg\";","import { createContext } from \"react\";\r\n\r\nexport default createContext(null);\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nconst AuthOptions = () => {\r\n  const { userData, setUserData } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const register = () => history.push(\"/register\");\r\n  const login = () => history.push(\"/login\");\r\n  const dashboard = () => history.push(\"/dashboard\");\r\n  const logout = () => {\r\n    setUserData({\r\n      token: undefined,\r\n      user: undefined,\r\n    });\r\n    localStorage.setItem(\"auth-token\", \"\");\r\n  };\r\n  return (\r\n    <div className=\"auth-options\">\r\n      {userData.user ? (\r\n        <>\r\n          <div className=\"user\" onClick={dashboard}>\r\n            <i className=\"fas fa-user\"></i>\r\n            <p>{userData.user.userName}</p>\r\n          </div>\r\n          <button onClick={logout} className=\"button-secondary button-logout\">\r\n            Log out\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <button onClick={login} className=\"button-secondary button-login\">\r\n            Log in\r\n          </button>\r\n          <button onClick={register} className=\"button-primary button-register\">\r\n            Register\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthOptions;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthOptions from \"../auth/AuthOptions\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <div className=\"container\">\r\n        <Link to=\"/\">\r\n          <h1 className=\"logo\">\r\n            <i className=\"fas fa-utensils\"></i>Booking App\r\n          </h1>\r\n        </Link>\r\n        <AuthOptions />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Modal = ({ children }) => {\r\n  const history = useHistory();\r\n\r\n  const handleClose = (e) => {\r\n    e.stopPropagation();\r\n    history.goBack();\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"modal__wrapper\" onClick={handleClose}>\r\n      <div className=\"modal__content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal__closeIcon\" onClick={handleClose}>\r\n          X\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    document.querySelector(\"#modal\")\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nconst ButtonDanger = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"button button-danger\" type=\"submit\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonDanger;\r\n","import React from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport ButtonDanger from \"../buttons/ButtonDanger\";\r\nconst Accept = (props) => (\r\n  <Modal>\r\n    <div className=\"accept-modal\">\r\n      <h2>Are you sure you want to delete this reservation?</h2>\r\n      <ButtonDanger onClick={props.removeBook}>YES</ButtonDanger>\r\n    </div>\r\n  </Modal>\r\n);\r\n\r\nexport default Accept;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst actualDate = new Date().getTime();\r\nconst Books = (props) => {\r\n  const cloneArr = [...props.books];\r\n\r\n  cloneArr\r\n    .sort(function (a, b) {\r\n      return (\r\n        new Date(`${b.dateDay}-${b.dateMonth}-${b.dateYear}-${b.hour}`) -\r\n        new Date(`${a.dateDay}-${a.dateMonth}-${a.dateYear}-${a.hour}`)\r\n      );\r\n    })\r\n    .reverse();\r\n\r\n  return cloneArr.map((el) => {\r\n    const convertDate = new Date(\r\n      `${el.dateDay}-${el.dateMonth}-${el.dateYear}-${el.hour}`\r\n    ).getTime();\r\n    return (\r\n      <div\r\n        className=\"book\"\r\n        style={\r\n          convertDate > actualDate &&\r\n          new Date(actualDate).toString().slice(0, 15) ===\r\n            new Date(convertDate).toString().slice(0, 15)\r\n            ? { borderBottom: \"solid 8px #11998e\" }\r\n            : convertDate < actualDate\r\n            ? { borderBottom: \"solid 8px rgb(219, 46, 46)\" }\r\n            : null\r\n        }\r\n        key={Math.random()}\r\n      >\r\n        <h3 className=\"date\">\r\n          {el.dateDay}-{el.dateMonth}-{el.dateYear}\r\n        </h3>\r\n        <h3 className=\"hour\">{el.hour}</h3>\r\n        <h3 className=\"name\">\r\n          {el.firstName} {el.lastName}\r\n        </h3>\r\n        <h3 className=\"seats\">{el.numberOfSeats}</h3>\r\n        <NavLink\r\n          to=\"/dashboard/accept\"\r\n          onClick={() => props.setElToRemove(el)}\r\n          className=\"fas fa-times\"\r\n        ></NavLink>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Books;\r\n","import React from \"react\";\r\n\r\nconst ButtonPrimary = ({ children, onClick }) => {\r\n  return (\r\n    <button className=\"button button-primary\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonPrimary;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ButtonPrimary from \"../buttons/ButtonPrimary\";\r\n\r\nconst ZeroBooks = () => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push(\"/booking\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"zero-books\">\r\n      <h2>\r\n        You don't have any reservations{\" \"}\r\n        <span role=\"img\" aria-label=\"crying\">\r\n          😢\r\n        </span>\r\n      </h2>\r\n      <ButtonPrimary onClick={handleClick}>Booking</ButtonPrimary>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ZeroBooks;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"bounce1\"></div>\r\n      <div className=\"bounce2\"></div>\r\n      <div className=\"bounce3\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\n\r\nconst ErrorMessage = ({ error }) => <p className=\"error-message\">{error}</p>;\r\n\r\nexport default ErrorMessage;\r\n","import React from \"react\";\r\n\r\nconst ButtonDisabled = ({ children }) => {\r\n  return (\r\n    <button className=\"button button-disabled\" disabled>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonDisabled;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport Spinner from \"../Spinner\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\nimport ButtonDisabled from \"../buttons/ButtonDisabled\";\r\nimport ButtonDanger from \"../buttons/ButtonDanger\";\r\nconst DeleteAccount = (props) => {\r\n  const [confirmation, setConfirmation] = useState(\"\");\r\n  const [isError, setIsError] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const text = \"agree\";\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    let token = localStorage.getItem(\"auth-token\");\r\n    fetch(\"https://booking-app-back.herokuapp.com/users/deleteUser\", {\r\n      method: \"DELETE\",\r\n      headers: { \"x-auth-token\": token },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setLoading(false);\r\n        if (response.error) {\r\n          isError(true);\r\n          setError(response.error);\r\n        } else {\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        isError(true);\r\n        setError(e.message);\r\n      });\r\n  };\r\n\r\n  const validation = () => {\r\n    if (confirmation === text) {\r\n      setIsError(false);\r\n    } else {\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <form onSubmit={submit} className=\"delete-account modal-form\">\r\n        <h2>Are you absolutely sure?</h2>\r\n        <h3>\r\n          This action cannot be undone. This will permanently delete the\r\n          profile, booking, history.\r\n        </h3>\r\n        <label>\r\n          Please type <strong>{text}</strong> to confirm.\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={confirmation}\r\n          onKeyUp={() => validation()}\r\n          onKeyDown={() => validation()}\r\n          onChange={(e) => {\r\n            validation();\r\n            setConfirmation(e.target.value);\r\n          }}\r\n        />\r\n        {loading ? <Spinner /> : null}\r\n        {isError ? <ErrorMessage error={error} /> : null}\r\n        {isError ? (\r\n          <ButtonDisabled>delete</ButtonDisabled>\r\n        ) : (\r\n          <ButtonDanger>delete </ButtonDanger>\r\n        )}\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeleteAccount;\r\n","const alphanumeric = /^[a-zA-Z0-9ĄąĘęÓóŁłŚśĄąŻżŹźĆćŃń]*$/gm;\r\n\r\nconst validationChangeUsername = (changeUsername) => {\r\n  if (!changeUsername) {\r\n    throw new Error(\"Please enter username\");\r\n  }\r\n  if (!changeUsername.match(alphanumeric)) {\r\n    throw new Error(\"Username must contain only numbers and letters\");\r\n  }\r\n  if (changeUsername.length < 4) {\r\n    throw new Error(\"The minimum username length is: 4\");\r\n  }\r\n};\r\n\r\nexport default validationChangeUsername;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport validationChangeUsername from \"../../../validation/validationChangeUsername\";\r\nimport UserContext from \"../../../context/UserContext\";\r\nimport Spinner from \"../Spinner\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\nimport ButtonPrimary from \"../buttons/ButtonPrimary\";\r\nimport ButtonDisabled from \"../buttons/ButtonDisabled\";\r\n\r\nconst ChangeUsername = () => {\r\n  const { userData } = useContext(UserContext);\r\n  const [changeUsername, setChangeUsername] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isError, setIsError] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validation = () => {\r\n    setIsError(false);\r\n    try {\r\n      validationChangeUsername(changeUsername);\r\n    } catch (e) {\r\n      setIsError(true);\r\n      setError(e.message);\r\n    }\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    fetch(\"https://booking-app-back.herokuapp.com/users/changeUsername\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        changeUsername,\r\n        id: userData.user.id,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setLoading(false);\r\n        if (response.error) {\r\n          setError(response.error);\r\n          setIsError(true);\r\n        } else {\r\n          setIsError(false);\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        setIsError(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <form className=\"change-username modal-form\" onSubmit={submit}>\r\n        <h2>Change username</h2>\r\n        <label>New Username</label>\r\n        <input\r\n          type=\"text\"\r\n          value={changeUsername}\r\n          name=\"username\"\r\n          id=\"changeusername\"\r\n          onKeyUp={() => validation()}\r\n          onChange={(e) => {\r\n            validation();\r\n            setChangeUsername(e.target.value);\r\n          }}\r\n        />\r\n        {loading ? <Spinner /> : null}\r\n        {isError ? <ErrorMessage error={error} /> : null}\r\n        {isError ? (\r\n          <ButtonDisabled>Change username</ButtonDisabled>\r\n        ) : (\r\n          <ButtonPrimary>Change username</ButtonPrimary>\r\n        )}\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ChangeUsername;\r\n","const alphanumeric = /^[a-zA-Z0-9ĄąĘęÓóŁłŚśĄąŻżŹźĆćŃń]*$/gm;\r\n\r\nconst validationChangePassword = (\r\n  oldPassword,\r\n  newPassword,\r\n  confirmNewPassword\r\n) => {\r\n  if (!oldPassword) {\r\n    throw new Error(\"Please enter old password\");\r\n  }\r\n  if (!newPassword) {\r\n    throw new Error(\"Please enter new password\");\r\n  }\r\n  if (!confirmNewPassword) {\r\n    throw new Error(\"Please enter confirm new password\");\r\n  }\r\n  if (!oldPassword.match(alphanumeric)) {\r\n    throw new Error(\"Old password must contain only numbers and letters\");\r\n  }\r\n  if (!newPassword.match(alphanumeric)) {\r\n    throw new Error(\"New password must contain only numbers and letters\");\r\n  }\r\n  if (!confirmNewPassword.match(alphanumeric)) {\r\n    throw new Error(\r\n      \"Confirm new password must contain only numbers and letters\"\r\n    );\r\n  }\r\n  if (oldPassword.length < 7) {\r\n    throw new Error(\"The minimum old password length is: 7\");\r\n  }\r\n  if (newPassword.length < 7) {\r\n    throw new Error(\"The minimum new password length is: 7\");\r\n  }\r\n  if (confirmNewPassword.length < 7) {\r\n    throw new Error(\"The minimum confirm new password length is: 7\");\r\n  }\r\n  if (newPassword !== confirmNewPassword) {\r\n    throw new Error(\r\n      \"New Password must be the same as the confirm new password\"\r\n    );\r\n  }\r\n};\r\n\r\nexport default validationChangePassword;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport UserContext from \"../../../context/UserContext\";\r\nimport validationChangePassword from \"../../../validation/validationChangePassword\";\r\nimport Spinner from \"../Spinner\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\nimport ButtonPrimary from \"../buttons/ButtonPrimary\";\r\nimport ButtonDisabled from \"../buttons/ButtonDisabled\";\r\nconst ChangePassword = () => {\r\n  const { userData } = useContext(UserContext);\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n  const [isError, setIsError] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validation = () => {\r\n    setIsError(false);\r\n    try {\r\n      validationChangePassword(oldPassword, newPassword, confirmNewPassword);\r\n    } catch (e) {\r\n      setIsError(true);\r\n      setError(e.message);\r\n    }\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    fetch(\"https://booking-app-back.herokuapp.com/users/changePassword\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        oldPassword,\r\n        newPassword,\r\n        id: userData.user.id,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setLoading(false);\r\n        if (response.error) {\r\n          setError(response.error);\r\n          setIsError(true);\r\n        } else {\r\n          setIsError(false);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        setIsError(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <form className=\"change-username modal-form\" onSubmit={submit}>\r\n        <h2>Change password</h2>\r\n        <label>Old password</label>\r\n        <input\r\n          type=\"password\"\r\n          onKeyUp={validation}\r\n          onChange={(e) => {\r\n            validation();\r\n            setOldPassword(e.target.value);\r\n          }}\r\n        />\r\n        <label>New password</label>\r\n        <input\r\n          type=\"password\"\r\n          onKeyUp={validation}\r\n          onChange={(e) => {\r\n            validation();\r\n            setNewPassword(e.target.value);\r\n          }}\r\n        />\r\n        <label>Confirm new password</label>\r\n        <input\r\n          type=\"password\"\r\n          onKeyUp={validation}\r\n          onChange={(e) => {\r\n            validation();\r\n            setConfirmNewPassword(e.target.value);\r\n          }}\r\n        />\r\n        {loading ? <Spinner /> : null}\r\n        {isError ? <ErrorMessage error={error} /> : null}\r\n        {isError ? (\r\n          <ButtonDisabled>Change username</ButtonDisabled>\r\n        ) : (\r\n          <ButtonPrimary>Change password</ButtonPrimary>\r\n        )}\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Accept from \"../layout/dashboard/Accept\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Books from \"../layout/dashboard/Books\";\r\nimport ZeroBooks from \"../layout/dashboard/ZeroBooks\";\r\nimport DeleteAccount from \"../layout/dashboard/DeleteAccount\";\r\nimport ChangeUsername from \"../layout/dashboard/ChangeUsername\";\r\nimport ChangePassword from \"../layout/dashboard/ChangePassword\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ButtonDanger from \"../layout/buttons/ButtonDanger\";\r\nconst Dashboard = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [elToRemove, setElToRemove] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const { userData } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    const downloadData = async () => {\r\n      setLoading(true);\r\n      const bookRes = await fetch(\r\n        \"https://booking-app-back.herokuapp.com/book/get\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ userId: userData.user.id }),\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n      const bookResJson = await bookRes.json();\r\n      if (bookResJson) {\r\n        setBooks(bookResJson);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    if (userData.user) {\r\n      downloadData();\r\n    }\r\n  }, [userData.user]);\r\n\r\n  const removeBook = () => {\r\n    fetch(\"https://booking-app-back.herokuapp.com/book\", {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify({\r\n        id: elToRemove._id,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setBooks(books.filter((el) => el._id !== data._id));\r\n        history.push(\"/dashboard\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Route\r\n      render={() =>\r\n        userData.user ? (\r\n          <div className=\"page-dashboard\">\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route path=\"/dashboard/accept\">\r\n                  <Accept removeBook={removeBook} />\r\n                </Route>\r\n                <Route path=\"/dashboard/changeUsername\">\r\n                  <ChangeUsername />\r\n                </Route>\r\n                <Route path=\"/dashboard/deleteAccount\">\r\n                  <DeleteAccount />\r\n                </Route>\r\n                <Route path=\"/dashboard/changePassword\">\r\n                  <ChangePassword />\r\n                </Route>\r\n              </Switch>\r\n              <div className=\"dashboard__myData\">\r\n                <h1>My Data</h1>\r\n                <h2>Email: {userData.user.email}</h2>\r\n                <h2>Username: {userData.user.userName}</h2>\r\n                <div className=\"buttons\">\r\n                  <button\r\n                    className=\"button button-secondary\"\r\n                    onClick={() => history.push(\"/dashboard/changeUsername\")}\r\n                  >\r\n                    Change user name\r\n                  </button>\r\n                  <button\r\n                    className=\"button button-secondary\"\r\n                    onClick={() => history.push(\"/dashboard/changePassword\")}\r\n                  >\r\n                    Change password\r\n                  </button>\r\n                  <ButtonDanger\r\n                    onClick={() => history.push(\"/dashboard/deleteAccount\")}\r\n                  >\r\n                    Delete account\r\n                  </ButtonDanger>\r\n                </div>\r\n              </div>\r\n              <div className=\"dashboard__books\">\r\n                <h1>My Books</h1>\r\n                <div className=\"colors\">\r\n                  <div className=\"color today\">\r\n                    <h3>Reservations for today</h3>\r\n                    <div></div>\r\n                  </div>\r\n                  <div className=\"color dedline\">\r\n                    <h3>After the deadline</h3>\r\n                    <div></div>\r\n                  </div>\r\n                  <div className=\"color fewDays\">\r\n                    <h3>Other reservations</h3>\r\n                    <div></div>\r\n                  </div>\r\n                </div>\r\n                {loading ? (\r\n                  <Spinner />\r\n                ) : books.length ? (\r\n                  <div className=\"books\">\r\n                    <Books books={books} setElToRemove={setElToRemove} />\r\n                  </div>\r\n                ) : (\r\n                  <ZeroBooks />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { createContext } from \"react\";\r\n\r\nexport default createContext(null);\r\n","const alphanumeric = /^[a-zA-Z0-9ĄąĘęÓóŁłŚśĄąŻżŹźĆćŃń]*$/gm;\r\n\r\nconst validationBook = (name, lastName) => {\r\n  if (!name.match(alphanumeric)) {\r\n    throw new Error(\"Name is not correct\");\r\n  }\r\n  if (!lastName.match(alphanumeric)) {\r\n    throw new Error(\"Last name is not correct\");\r\n  }\r\n  if (name.length < 3) {\r\n    throw new Error(\"The minimum name length is: 3\");\r\n  }\r\n  if (lastName.length < 3) {\r\n    throw new Error(\"The minimum last name length is: 3\");\r\n  }\r\n};\r\n\r\nexport default validationBook;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ButtonPrimary from \"../buttons/ButtonPrimary\";\r\nconst Success = () => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = (e) => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"success\">\r\n      <h1>Congratulations!</h1>\r\n      <h2>You managed to book a table!</h2>\r\n      <ButtonPrimary onClick={handleClick}>Go home</ButtonPrimary>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Success;\r\n","import React, { useContext, useState } from \"react\";\r\nimport BookContext from \"../../../context/BookContext\";\r\nimport Modal from \"../Modal\";\r\nimport validationBook from \"../../../validation/validationBook\";\r\nimport Success from \"./Success\";\r\nimport Spinner from \"../Spinner\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\nimport ButtonPrimary from \"../buttons/ButtonPrimary\";\r\nimport ButtonDisabled from \"../buttons/ButtonDisabled\";\r\nconst HourForm = () => {\r\n  const { bookData } = useContext(BookContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [numberOfSeats, setNumberOfSeats] = useState(\"1\");\r\n  const [hour, setHour] = useState(\"10:00\");\r\n  const [isError, setIsError] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const postData = () => {\r\n    setLoading(true);\r\n    fetch(\"https://booking-app-back.herokuapp.com/book\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        ...bookData,\r\n        firstName: name,\r\n        lastName,\r\n        numberOfSeats,\r\n        hour,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setLoading(false);\r\n        if (data.error) {\r\n          setError(data.error);\r\n          setIsError(true);\r\n        } else {\r\n          setSuccess(true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setError(\"Failed to fetch\");\r\n        setIsError(true);\r\n      });\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    postData();\r\n  };\r\n\r\n  const validation = () => {\r\n    setIsError(false);\r\n    try {\r\n      validationBook(name, lastName);\r\n    } catch (e) {\r\n      setIsError(true);\r\n      setError(e.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <form className=\"form-time modal-form\" onSubmit={submit}>\r\n        {success ? <Success /> : null}\r\n        <>\r\n          <h2>Complete the form</h2>\r\n          <h4>\r\n            {bookData.dateDay}-{bookData.dateMonth}-{bookData.dateYear}\r\n          </h4>\r\n          <h4>{bookData.email}</h4>\r\n          <label htmlFor=\"firstName\">\r\n            First Name <span className=\"star\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstName\"\r\n            onKeyUp={validation}\r\n            onKeyDown={validation}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n              validation();\r\n            }}\r\n          />\r\n          <label htmlFor=\"lastName\">\r\n            Last Name <span className=\"star\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            onKeyUp={validation}\r\n            onKeyDown={validation}\r\n            onChange={(e) => {\r\n              setLastName(e.target.value);\r\n              validation();\r\n            }}\r\n          />\r\n          <div className=\"details\">\r\n            <label htmlFor=\"numberOfSeats\">\r\n              Seats <span className=\"star\">*</span>\r\n            </label>\r\n            <select\r\n              name=\"numberOfSeats\"\r\n              id=\"numberOfSeats\"\r\n              onChange={(e) => setNumberOfSeats(e.target.value)}\r\n            >\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"6\">6</option>\r\n              <option value=\"7\">7</option>\r\n              <option value=\"8\">8</option>\r\n              <option value=\"9\">9</option>\r\n            </select>\r\n            <label htmlFor=\"hour\">\r\n              Hour <span className=\"star\">*</span>\r\n            </label>\r\n            <select\r\n              name=\"hour\"\r\n              id=\"hour\"\r\n              onChange={(e) => setHour(e.target.value)}\r\n            >\r\n              <option value=\"10:00\">10:00</option>\r\n              <option value=\"11:00\">11:00</option>\r\n              <option value=\"12:00\">12:00</option>\r\n              <option value=\"13:00\">13:00</option>\r\n              <option value=\"14:00\">14:00</option>\r\n              <option value=\"15:00\">15:00</option>\r\n              <option value=\"16:00\">16:00</option>\r\n              <option value=\"17:00\">17:00</option>\r\n              <option value=\"18:00\">18:00</option>\r\n              <option value=\"19:00\">19:00</option>\r\n              <option value=\"20:00\">20:00</option>\r\n            </select>\r\n          </div>\r\n          {loading ? <Spinner /> : null}\r\n          {isError ? <ErrorMessage error={error} /> : null}\r\n          {isError ? (\r\n            <ButtonDisabled>Book a table</ButtonDisabled>\r\n          ) : (\r\n            <ButtonPrimary>Book a table</ButtonPrimary>\r\n          )}\r\n        </>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default HourForm;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport HourForm from \"./HourForm\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport BookContext from \"../../../context/BookContext\";\r\nimport UserContext from \"../../../context/UserContext\";\r\n\r\nconst dataNamesDays = [\r\n  { shortCut: \"Sun\", name: \"Sunday\" },\r\n  { shortCut: \"Mon\", name: \"Monday\" },\r\n  { shortCut: \"Tue\", name: \"Tuesday\" },\r\n  { shortCut: \"Wed\", name: \"Wednesday\" },\r\n  { shortCut: \"Thu\", name: \"Thursday\" },\r\n  { shortCut: \"Fri\", name: \"Friday\" },\r\n  { shortCut: \"Sat\", name: \"Saturday\" },\r\n];\r\n\r\nconst Calendar = () => {\r\n  const [availableDates, setAvailableDates] = useState([]);\r\n  const { bookData, setBookData } = useContext(BookContext);\r\n  const { userData } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    const arr = [];\r\n    for (let i = 1; i < 18; i++) {\r\n      if (i !== 11) {\r\n        const fortnightAway = new Date(\r\n          Date.now() + 1000 * 60 * 60 * 24 * (1 * i)\r\n        ).toString();\r\n\r\n        arr.push({\r\n          year: fortnightAway.slice(11, 15),\r\n          month: fortnightAway.slice(4, 7),\r\n          day: fortnightAway.slice(8, 10),\r\n          name: fortnightAway.slice(0, 3),\r\n        });\r\n      }\r\n      setAvailableDates(arr);\r\n    }\r\n  }, []);\r\n\r\n  const NameDay = ({ name }) =>\r\n    dataNamesDays.map((el) => {\r\n      if (el.shortCut === name) {\r\n        return <h2 key={Math.floor(Math.random())}>{el.name}</h2>;\r\n      }\r\n      return null;\r\n    });\r\n\r\n  const handleClick = (date) => {\r\n    setBookData({\r\n      ...bookData,\r\n      userId: userData.user.id,\r\n      dateDay: date.day,\r\n      dateMonth: date.month,\r\n      dateYear: date.year,\r\n      email: userData.user.email,\r\n    });\r\n  };\r\n\r\n  const Tiles = () =>\r\n    availableDates.map((date) => (\r\n      <NavLink\r\n        to=\"/booking/form\"\r\n        key={`${date.day}-${date.month}-${date.year}`}\r\n        onClick={() => handleClick(date)}\r\n      >\r\n        <div className=\"tile\">\r\n          <h1>{date.day}</h1>\r\n          <NameDay name={date.name} />\r\n          <h2>{date.month}</h2>\r\n          <h3>{date.year}</h3>\r\n        </div>\r\n      </NavLink>\r\n    ));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"board\">\r\n        <Tiles />\r\n      </div>\r\n      <Switch>\r\n        <Route path=\"/booking/form\">\r\n          <HourForm />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Calendar from \"../layout/calendary/Calendar\";\r\nconst Booking = () => {\r\n  const { userData } = useContext(UserContext);\r\n  const BookingPage = () => (\r\n    <div className=\"page-booking\">\r\n      <div className=\"container\">\r\n        <h1>Booking</h1>\r\n        <h2>Select the day and hour and we will reserve a table for you ❤</h2>\r\n        <Calendar />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Route\r\n      render={() =>\r\n        userData.user ? <BookingPage /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Booking;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport svg from \"../../svg/undraw_Booking_re_gw4j.svg\";\r\nimport ButtonPrimary from \"../layout/buttons/ButtonPrimary\";\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  const handleClick = () => history.push(\"/booking\");\r\n  return (\r\n    <div className=\"page-home\">\r\n      <div className=\"container\">\r\n        <div className=\"content\">\r\n          <h1 className=\"home__title\">Restaurant</h1>\r\n          <h2 className=\"home__description\">\r\n            Book a table in the best restaurant in Poland\r\n          </h2>\r\n          <ButtonPrimary onClick={handleClick}>booking</ButtonPrimary>\r\n        </div>\r\n        <img src={svg} alt=\"booking_svg\" className=\"home__svg\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport svg404 from \"../../svg/404.svg\";\r\nconst Error = () => {\r\n  return (\r\n    <div className=\"error-page\">\r\n      <div className=\"container\">\r\n        <h1>Page not found</h1>\r\n        <img src={svg404} alt=\"error-page\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","const alphanumeric = /^[a-zA-Z0-9ĄąĘęÓóŁłŚśĄąŻżŹźĆćŃń]*$/gm;\r\nconst mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\nconst validationLogin = (email, password) => {\r\n  if (!email) {\r\n    throw new Error(\"Please enter email\");\r\n  }\r\n  if (!email.match(mailformat)) {\r\n    throw new Error(\"Email is not correct\");\r\n  }\r\n  if (!password) {\r\n    throw new Error(\"Please enter password\");\r\n  }\r\n  if (!password.match(alphanumeric)) {\r\n    throw new Error(\"Password must contain only numbers and letters\");\r\n  }\r\n  if (password.length < 7) {\r\n    throw new Error(\"The minimum password length is: 7\");\r\n  }\r\n};\r\n\r\nexport default validationLogin;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport validationLogin from \"../../validation/validationLogin\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ErrorMessage from \"../layout/ErrorMessage\";\r\nimport ButtonPrimary from \"../layout/buttons/ButtonPrimary\";\r\nimport ButtonDisabled from \"../layout/buttons/ButtonDisabled\";\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isError, setIsError] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { userData, setUserData } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const validation = () => {\r\n    setIsError(false);\r\n    try {\r\n      validationLogin(email, password);\r\n    } catch (e) {\r\n      setError(e.message);\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  const postLogin = async (user) => {\r\n    setLoading(true);\r\n    try {\r\n      const login = await fetch(\r\n        \"https://booking-app-back.herokuapp.com/users/login\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(user),\r\n        }\r\n      );\r\n      const loginResponse = await login.json();\r\n      setLoading(false);\r\n      if (loginResponse.error) {\r\n        setError(loginResponse.error);\r\n        setIsError(true);\r\n      } else {\r\n        setUserData({\r\n          token: loginResponse.token,\r\n          user: loginResponse.user,\r\n        });\r\n        localStorage.setItem(\"auth-token\", loginResponse.token);\r\n        history.push(\"/booking\");\r\n      }\r\n    } catch (e) {\r\n      setLoading(false);\r\n      setError(\"Failed to fetch\");\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const user = { email, password };\r\n    if (!isError && email && password) {\r\n      await postLogin(user);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Route\r\n      render={() =>\r\n        !userData.user ? (\r\n          <>\r\n            <div className=\"page page-form\">\r\n              <div className=\"form\">\r\n                <h2>Login</h2>\r\n                <form onSubmit={submit}>\r\n                  <label htmlFor=\"login-email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"login-email\"\r\n                    onKeyUp={validation}\r\n                    onChange={(e) => {\r\n                      setEmail(e.target.value);\r\n                      validation();\r\n                    }}\r\n                  />\r\n                  <label htmlFor=\"login-password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"login-password\"\r\n                    onKeyUp={validation}\r\n                    onChange={(e) => {\r\n                      setPassword(e.target.value);\r\n                      validation();\r\n                    }}\r\n                  />\r\n                  {loading ? <Spinner /> : null}\r\n                  {isError ? <ErrorMessage error={error} /> : null}\r\n                  {isError ? (\r\n                    <ButtonDisabled>Log in</ButtonDisabled>\r\n                  ) : (\r\n                    <ButtonPrimary>Log in</ButtonPrimary>\r\n                  )}\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","const alphanumeric = /^[a-zA-Z0-9ĄąĘęÓóŁłŚśĄąŻżŹźĆćŃń]*$/gm;\r\nconst mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\nconst validationRegister = (email, userName, password, passwordCheck) => {\r\n  if (!email) {\r\n    throw new Error(\"Please enter email\");\r\n  }\r\n  if (!email.match(mailformat)) {\r\n    throw new Error(\"Email is not correct\");\r\n  }\r\n  if (!userName) {\r\n    throw new Error(\"Please enter username\");\r\n  }\r\n  if (userName.length < 4) {\r\n    throw new Error(\"The minimum username length is: 4\");\r\n  }\r\n  if (!userName.match(alphanumeric)) {\r\n    throw new Error(\"Username must contain only numbers and letters\");\r\n  }\r\n  if (!password) {\r\n    throw new Error(\"Please enter password\");\r\n  }\r\n  if (!password.match(alphanumeric)) {\r\n    throw new Error(\"Password must contain only numbers and letters\");\r\n  }\r\n  if (password.length < 7) {\r\n    throw new Error(\"The minimum password length is: 7\");\r\n  }\r\n  if (password !== passwordCheck) {\r\n    throw new Error(\"Password must be the same as the veryfy password\");\r\n  }\r\n};\r\n\r\nexport default validationRegister;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport validationRegister from \"../../validation/validationRegister\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ErrorMessage from \"../layout/ErrorMessage\";\r\nimport ButtonPrimary from \"../layout/buttons/ButtonPrimary\";\r\nimport ButtonDisabled from \"../layout/buttons/ButtonDisabled\";\r\nconst Register = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [isError, setIsError] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const validation = () => {\r\n    setIsError(false);\r\n    try {\r\n      validationRegister(email, userName, password, passwordCheck);\r\n    } catch (e) {\r\n      setError(e.message);\r\n      setIsError(true);\r\n    }\r\n  };\r\n  const postRegister = async (newUser) => {\r\n    setLoading(true);\r\n    try {\r\n      const register = await fetch(\r\n        \"https://booking-app-back.herokuapp.com/users/register\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(newUser),\r\n        }\r\n      );\r\n      const registerResponse = await register.json();\r\n      setLoading(false);\r\n      if (registerResponse.error) {\r\n        setError(registerResponse.error);\r\n        setIsError(true);\r\n      } else {\r\n        history.push(\"/login\");\r\n      }\r\n    } catch (e) {\r\n      setLoading(false);\r\n      setError(\"Failed to fetch\");\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const newUser = { email, userName, password, passwordCheck };\r\n\r\n    if (!isError && email && password && passwordCheck) {\r\n      await postRegister(newUser);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page page-form\">\r\n        <div className=\"form\">\r\n          <h2>Register</h2>\r\n          <form onSubmit={submit}>\r\n            <label htmlFor=\"register-email\">\r\n              Email <span className=\"star\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"register-email\"\r\n              type=\"email\"\r\n              onKeyUp={validation}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n                validation();\r\n              }}\r\n            />\r\n            <label htmlFor=\"register-display-name\">\r\n              Username <span className=\"star\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"register-display-name\"\r\n              type=\"text\"\r\n              onKeyUp={validation}\r\n              onChange={(e) => {\r\n                setUserName(e.target.value);\r\n                validation();\r\n              }}\r\n            />\r\n\r\n            <label htmlFor=\"register-password\">\r\n              Password <span className=\"star\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"register-password\"\r\n              type=\"password\"\r\n              onKeyUp={validation}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n                validation();\r\n              }}\r\n            />\r\n            <label htmlFor=\"register-password-check\">\r\n              Veryify password <span className=\"star\">*</span>\r\n            </label>\r\n\r\n            <input\r\n              id=\"register-password-check\"\r\n              type=\"password\"\r\n              onKeyUp={validation}\r\n              onChange={(e) => {\r\n                setPasswordCheck(e.target.value);\r\n                validation();\r\n              }}\r\n            />\r\n            {loading ? <Spinner /> : null}\r\n            {isError ? <ErrorMessage error={error} /> : null}\r\n            {isError ? (\r\n              <ButtonDisabled>Register</ButtonDisabled>\r\n            ) : (\r\n              <ButtonPrimary>Register</ButtonPrimary>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./components/pages/Dashboard\";\r\nimport Booking from \"./components/pages/Booking\";\r\nimport Home from \"./components/pages/Home\";\r\nimport Error from \"./components/pages/Error\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\n\r\nconst Page = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n        <Route path=\"/booking\" component={Booking} />\r\n        <Route path=\"/\" component={Error} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Page from \"./Page\";\nimport UserContext from \"./context/UserContext\";\nimport BookContext from \"./context/BookContext\";\nimport Spinner from \"./components/layout/Spinner\";\n\nconst App = () => {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n  const [bookData, setBookData] = useState({\n    userId: undefined,\n    dateDay: undefined,\n    dateMonth: undefined,\n    dateYear: undefined,\n    email: undefined,\n    firstName: undefined,\n    lastName: undefined,\n    numberOfSeats: undefined,\n    hour: undefined,\n  });\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      setLoading(true);\n      let token = localStorage.getItem(\"auth-token\");\n\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n\n      const tokenRes = await fetch(\n        \"https://booking-app-back.herokuapp.com/users/tokenIsValid\",\n        {\n          method: \"POST\",\n          headers: {\n            \"x-auth-token\": token,\n          },\n        }\n      );\n      const tokenResJson = await tokenRes.json();\n      if (tokenResJson) {\n        const user = await fetch(\n          \"https://booking-app-back.herokuapp.com/users\",\n          {\n            headers: { \"x-auth-token\": token },\n          }\n        );\n        const userJson = await user.json();\n        setUserData({\n          ...userData,\n          token,\n          user: userJson,\n        });\n      }\n      setLoading(false);\n    };\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <>\n      <BrowserRouter>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          <BookContext.Provider value={{ bookData, setBookData }}>\n            {loading ? (\n              <Spinner />\n            ) : (\n              <>\n                <Navbar />\n                <Page />\n              </>\n            )}\n          </BookContext.Provider>\n        </UserContext.Provider>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}